#!/usr/bin/env python
# coding: utf-8
import os
import time
import signal
import sys
import RPi.GPIO as GPIO
pin = 36 # The pin ID, edit here to change it
maxTMP = 25 # The maximum temperature in Celsius after which we trigger the fan
maxHum = 40
GPIO.setmode (GPIO.BOARD)

def setup():
    GPIO.setmode(GPIO.BOARD)
    GPIO.setup(pin,GPIO.OUT)
    GPIO.setwarnings(False)
    return()
#def getCPUtemperature():
#    res = os.popen('vcgencmd measure_temp').readline()
#    temp =(res.replace("temp=","").replace("'C\n",""))
#    print("temp is {0}".format(temp)) #Uncomment here for testing
#    return temp
def fanON():
    setPin(True)
    return()
def fanOFF():
    setPin(False)
    return()
#def getTEMP():
#    CPU_temp = float(getCPUtemperature())

#    if CPU_temp>maxTMP:
#        fanON()

#    else:
#        fanOFF()

#    return()
def setPin(mode): # A little redundant function but useful if you want to add logging
    GPIO.output(pin, mode)
    return()
try:
    setup()
    while True:
        #getTEMP()
	fanON()
        time. sleep(8) # Read the temperature every 5 sec, increase or decrease this limit if you want
	fanOFF()
	time.sleep(8)
except KeyboardInterrupt: # trap a CTRL+C keyboard interrupt
	GPIO.cleanup()

